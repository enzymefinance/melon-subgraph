specVersion: 0.0.2
description: Melon protocol
repository: https://github.com/melonproject/melon-subgraph
schema:
  file: ./schema.graphql

###############################################################################
#
# Contracts with fixed addresses
#
###############################################################################
dataSources:
  #
  # Registry contract as main entry point
  #
  - name: RegistryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      address: "{{melon.addr.Registry}}"
      abi: RegistryContract
      # prettier-ignore
      startBlock: {{conf.block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Registry.ts
      entities:
        - Asset
        - Version
        - Registry
        - Engine
        - Contract
        - PriceSource
        - MlnToken
        - NativeAsset
      abis:
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: VersionContract
          file: ./src/abis/Version.abi
      eventHandlers:
        - event: VersionRegistration(indexed address)
          handler: handleVersionRegistration
        - event: AssetUpsert(indexed address,string,string,uint256,string,uint256,uint256[],bytes4[])
          handler: handleAssetUpsert
        - event: AssetRemoval(indexed address)
          handler: handleAssetRemoval
        - event: ExchangeAdapterUpsert(indexed address,indexed address,bool,bytes4[])
          handler: handleExchangeAdapterUpsert
        - event: ExchangeAdapterRemoval(indexed address)
          handler: handleExchangeAdapterRemoval
        - event: EngineChange(indexed address)
          handler: handleEngineChange
        - event: PriceSourceChange(indexed address)
          handler: handlePriceSourceChange
        - event: MlnTokenChange(indexed address)
          handler: handleMlnTokenChange
        - event: NativeAssetChange(indexed address)
          handler: handleNativeAssetChange
        - event: MGMChange(indexed address)
          handler: handleMGMChange
        - event: LogSetOwner(indexed address)
          handler: handleLogSetOwner

  - name: RegistryDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      address: "0x1Bfd21f7db126a5966d2C09492676807a68859Ba"
      abi: RegistryContract
      # prettier-ignore
      startBlock: {{conf.block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Registry.ts
      entities:
        - Asset
        - Version
        - Registry
        - Engine
        - Contract
        - PriceSource
        - MlnToken
        - NativeAsset
      abis:
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: VersionContract
          file: ./src/abis/Version.abi
      eventHandlers:
        - event: VersionRegistration(indexed address)
          handler: handleVersionRegistration
        - event: AssetUpsert(indexed address,string,string,uint256,string,uint256,uint256[],bytes4[])
          handler: handleAssetUpsert
        - event: AssetRemoval(indexed address)
          handler: handleAssetRemoval
        - event: ExchangeAdapterUpsert(indexed address,indexed address,bool,bytes4[])
          handler: handleExchangeAdapterUpsert
        - event: ExchangeAdapterRemoval(indexed address)
          handler: handleExchangeAdapterRemoval
        - event: EngineChange(indexed address)
          handler: handleEngineChange
        - event: PriceSourceChange(indexed address)
          handler: handlePriceSourceChange
        - event: MlnTokenChange(indexed address)
          handler: handleMlnTokenChange
        - event: NativeAssetChange(indexed address)
          handler: handleNativeAssetChange
        - event: MGMChange(indexed address)
          handler: handleMGMChange
        - event: LogSetOwner(indexed address)
          handler: handleLogSetOwner

###############################################################################
#
# Contracts with dynamically set addresses
#
###############################################################################
templates:
  #
  # Infrastructure templates
  #
  - name: VersionDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: VersionContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Version/Version.ts
      entities:
        - Fund
        - FundCount
        - State
        - FundCalculationsHistory
      abis:
        - name: VersionContract
          file: ./src/abis/Version.abi
        - name: HubContract
          file: ./src/abis/Hub.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: SharesContract
          file: ./src/abis/Shares.abi
      eventHandlers:
        - event: NewFund(indexed address,indexed address,address[11])
          handler: handleNewFund

  - name: VersionDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: VersionContractV1010
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Version/VersionV1010.ts
      entities:
        - Fund
        - FundCount
        - State
        - FundCalculationsHistory
      abis:
        - name: VersionContractV1010
          file: ./src/abis/v.1.0.10/Version.abi
        - name: HubContract
          file: ./src/abis/Hub.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: SharesContract
          file: ./src/abis/Shares.abi
      eventHandlers:
        - event: NewFund(indexed address,indexed address,address[12])
          handler: handleNewFund

  - name: EngineDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: EngineContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Engine.ts
      entities:
        - Engine
        - Registry
      abis:
        - name: EngineContract
          file: ./src/abis/Engine.abi
        - name: MlnContract
          file: ./src/abis/PreminedToken.abi
      eventHandlers:
        - event: SetAmguPrice(uint256)
          handler: handleSetAmguPrice
        - event: RegistryChange(address)
          handler: handleRegistryChange
        - event: AmguPaid(uint256)
          handler: handleAmguPaid
        - event: Thaw(uint256)
          handler: handleThaw
        - event: Burn(uint256)
          handler: handleBurn

  - name: PriceSourceDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: PriceSourceContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/PriceSource.ts
      entities:
        - State
        - Asset
        - AssetPriceUpdate
        - Fund
        - FundHoldingsHistory
        - FundCalculationsHistory
        - AssetPriceUpdate
        - AssetPriceHistory
        - MelonNetworkAssetHistory
        - MelonNetworkHistory
        - Investment
        - InvestmentValuationHistory
        - Investor
        - InvestorValuationHistory
      abis:
        - name: PriceSourceContract
          file: ./src/abis/KyberPriceFeed.abi.json
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: VersionContract
          file: ./src/abis/Version.abi
        - name: HubContract
          file: ./src/abis/Hub.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: SharesContract
          file: ./src/abis/Shares.abi
        - name: ParticipationContract
          file: ./src/abis/Participation.abi
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
      eventHandlers:
        - event: PriceUpdate(address[],uint256[])
          handler: handlePriceUpdate
        - event: PricesUpdated(address[],uint256[])
          handler: handlePriceUpdate
  #
  # Factory contracts for fund spokes
  #
  - name: AccountingFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: AccountingFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/AccountingFactory/AccountingFactory.ts
      entities:
        - Asset
        - Accounting
      abis:
        - name: AccountingFactoryContract
          file: ./src/abis/AccountingFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address,address)
          handler: handleNewInstance

  - name: AccountingFactoryDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: AccountingFactoryContractV1010
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/AccountingFactory/AccountingFactoryV1010.ts
      entities:
        - Asset
        - Accounting
      abis:
        - name: AccountingFactoryContractV1010
          file: ./src/abis/v.1.0.10/AccountingFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address,address,address[])
          handler: handleNewInstance

  - name: FeeManagerFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: FeeManagerFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/FeeManagerFactory.ts
      entities:
        - FeeManager
      abis:
        - name: FeeManagerFactoryContract
          file: ./src/abis/FeeManagerFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance

  - name: ParticipationFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: ParticipationFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/ParticipationFactory.ts
      entities:
        - Asset
        - Participation
      abis:
        - name: ParticipationFactoryContract
          file: ./src/abis/ParticipationFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address)
          handler: handleNewInstance

  - name: PolicyManagerFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: PolicyManagerFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/PolicyManagerFactory.ts
      entities:
        - PolicyManager
      abis:
        - name: PolicyManagerFactoryContract
          file: ./src/abis/PolicyManagerFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance

  - name: SharesFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: SharesFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/SharesFactory.ts
      entities:
        - Shares
      abis:
        - name: SharesFactoryContract
          file: ./src/abis/SharesFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance

  - name: TradingFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/TradingFactory/TradingFactory.ts
      entities:
        - Trading
      abis:
        - name: TradingFactoryContract
          file: ./src/abis/TradingFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address[],address)
          handler: handleNewInstance

  # trading factory v.1.0.10
  - name: TradingFactoryDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingFactoryContractV1010
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/TradingFactory/TradingFactoryV1010.ts
      entities:
        - Trading
      abis:
        - name: TradingFactoryContractV1010
          file: ./src/abis/v.1.0.10/TradingFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address[],address)
          handler: handleNewInstance

  # trading factory v.1.0.1
  - name: TradingFactoryDataSourceV101
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingFactoryContractV101
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/TradingFactory/TradingFactoryV101.ts
      entities:
        - Trading
      abis:
        - name: TradingFactoryContractV101
          file: ./src/abis/v.1.0.1/TradingFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address,address[],address[],bool[],address)
          handler: handleNewInstance

  - name: VaultFactoryDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: VaultFactoryContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/VaultFactory.ts
      entities:
        - Vault
      abis:
        - name: VaultFactoryContract
          file: ./src/abis/VaultFactory.abi
      eventHandlers:
        - event: NewInstance(indexed address,indexed address)
          handler: handleNewInstance

  #
  # Fund hub/spokes templates
  #
  - name: HubDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: HubContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Hub.ts
      entities:
        - Fund
        - FundCount
        - State
      abis:
        - name: HubContract
          file: ./src/abis/Hub.abi
      eventHandlers:
        - event: FundShutDown()
          handler: handleFundShutDown

  - name: AccountingDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: AccountingContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Accounting/Accounting.ts
      entities:
        - Accounting
      abis:
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
      eventHandlers:
        - event: AssetAddition(indexed address)
          handler: handleAssetAddition
        - event: AssetRemoval(indexed address)
          handler: handleAssetRemoval

  - name: AccountingDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: AccountingContractV1010
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Accounting/AccountingV1010.ts
      entities:
        - Accounting
      abis:
        - name: AccountingContractV1010
          file: ./src/abis/v.1.0.10/Accounting.abi
      eventHandlers:
        - event: AssetAddition(indexed address)
          handler: handleAssetAddition
        - event: AssetRemoval(indexed address)
          handler: handleAssetRemoval

  - name: FeeManagerDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: FeeManagerContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/FeeManager.ts
      entities:
        - FeeManager
        - ManagementFee
        - PerformanceFee
        - Fund
        - Investment
        - Investor
      abis:
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
        - name: HubContract
          file: ./src/abis/Hub.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
      eventHandlers:
        - event: FeeRegistration(address)
          handler: handleFeeRegistration
        - event: FeeReward(uint256)
          handler: handleFeeReward

  - name: ParticipationDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: ParticipationContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Participation.ts
      entities:
        - Asset
        - Participation
        - Investor
        - Investment
        - InvestmentRequest
        - Fund
        - InvestorCount
        - State
        - InvestmentHistory
        - FundHoldingsHistory
      abis:
        - name: ParticipationContract
          file: ./src/abis/Participation.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: SharesContract
          file: ./src/abis/Shares.abi
        - name: HubContract
          file: ./src/abis/Hub.abi
        - name: PriceSourceContract
          file: ./src/abis/KyberPriceFeed.abi.json
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
      eventHandlers:
        - event: InvestmentRequest(indexed address,indexed address,uint256,uint256)
          handler: handleInvestmentRequest
        - event: RequestExecution(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleRequestExecution
        - event: CancelRequest(indexed address)
          handler: handleCancelRequest
        - event: Redemption(indexed address,address[],uint256[],uint256)
          handler: handleRedemption
        - event: EnableInvestment(address[])
          handler: handleEnableInvestment
        - event: DisableInvestment(address[])
          handler: handleDisableInvestment

  - name: PolicyManagerDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: PolicyManagerContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/PolicyManager.ts
      entities:
        - PolicyManager
        - Policy
      abis:
        - name: PolicyManagerContract
          file: ./src/abis/PolicyManager.abi
        - name: PolicyContract
          file: ./src/abis/IPolicy.abi
        - name: AssetBlackListContract
          file: ./src/abis/AssetBlacklist.abi
        - name: AssetWhiteListContract
          file: ./src/abis/AssetWhitelist.abi
        - name: MaxConcentrationContract
          file: ./src/abis/MaxConcentration.abi
        - name: MaxPositionsContract
          file: ./src/abis/MaxPositions.abi
        - name: PriceToleranceContract
          file: ./src/abis/PriceTolerance.abi
      eventHandlers:
        - event: Registration(indexed bytes4,uint8,indexed address)
          handler: handleRegistration

  - name: SharesDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: SharesContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Shares.ts
      entities:
        - Shares
      abis:
        - name: SharesContract
          file: ./src/abis/Shares.abi
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer

  # trading contract
  - name: TradingDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Trading/Trading.ts
      entities:
        - Trading
      abis:
        - name: TradingContract
          file: ./src/abis/Trading.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: ParticipationContract
          file: ./src/abis/Participation.abi
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: PriceSourceContract
          file: ./src/abis/KyberPriceFeed.abi.json
        - name: SharesContract
          file: ./src/abis/Shares.abi
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
      eventHandlers:
        - event: ExchangeMethodCall(indexed address,indexed string,address[8],uint256[8],bytes[4],bytes32,bytes)
          handler: handleExchangeMethodCall

  # trading contract v.1.0.10
  - name: TradingDataSourceV1010
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingContractV1010
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Trading/TradingV1010.ts
      entities:
        - Trading
      abis:
        - name: TradingContractV1010
          file: ./src/abis/v.1.0.10/Trading.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: ParticipationContract
          file: ./src/abis/Participation.abi
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: PriceSourceContract
          file: ./src/abis/KyberPriceFeed.abi.json
        - name: SharesContract
          file: ./src/abis/Shares.abi
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
      eventHandlers:
        - event: ExchangeMethodCall(indexed address,indexed string,address[6],uint256[8],bytes32,bytes,bytes,bytes)
          handler: handleExchangeMethodCall

  # trading contract v.1.0.1
  - name: TradingDataSourceV101
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: TradingContractV101
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Trading/TradingV101.ts
      entities:
        - Trading
      abis:
        - name: TradingContractV101
          file: ./src/abis/v.1.0.1/Trading.abi
        - name: AccountingContract
          file: ./src/abis/Accounting.abi
        - name: ParticipationContract
          file: ./src/abis/Participation.abi
        - name: RegistryContract
          file: ./src/abis/Registry.abi
        - name: PriceSourceContract
          file: ./src/abis/KyberPriceFeed.abi.json
        - name: SharesContract
          file: ./src/abis/Shares.abi
        - name: FeeManagerContract
          file: ./src/abis/FeeManager.abi
        - name: ManagementFeeContract
          file: ./src/abis/ManagementFee.abi
        - name: PerformanceFeeContract
          file: ./src/abis/PerformanceFee.abi
      eventHandlers:
        - event: ExchangeMethodCall(indexed address,indexed string,address[6],uint256[8],bytes32,bytes,bytes,bytes)
          handler: handleExchangeMethodCall

  - name: VaultDataSource
    kind: ethereum/contract
    network: "{{conf.network}}"
    source:
      abi: VaultContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/Vault.ts
      entities:
        - Vault
      abis:
        - name: VaultContract
          file: ./src/abis/Vault.abi
